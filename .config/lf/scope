#!/bin/sh

# This script is considered a configuration file and must be updated manually.

# Meanings of exit codes:
# code | meaning    | action of ranger
# -----+------------+-------------------------------------------
# 0    | success    | Display stdout as preview
# 1    | no preview | Display no preview at all
# 2    | plain text | Display the plain content of the file

draw() {
  ~/.config/lf/draw_img.sh "$@"
  exit 1
}

hash() {
  printf '%s/.cache/lf/%s' "$HOME" \
    "$(stat --printf '%n\0%i\0%F\0%s\0%W\0%Y' -- "$(readlink -f "$1")" | sha256sum | awk '{print $1}')"
}

cache() {
  if [ -f "$1" ]; then
    draw "$@"
  fi
}

set -C -f -u
IFS="$(printf '%b_' '\n')"; IFS="${IFS%_}"

file="$1"
shift

if [ -n "$FIFO_UEBERZUG" ]; then
  case "$(file -Lb --mime-type -- "$file")" in
    text/html) w3m -dump "$file" ;;
    text/troff) man ./ "$file" | col -b ;;
    text/* | */xml)
        if [ "$( stat --printf='%s' -- "$file" )" -gt 262143 ]; then
            exit 2
        fi
        if [ "$( tput colors )" -ge 256 ]; then
            local highlight_format='xterm256'
        else
            local highlight_format='ansi'
        fi
        highlight --replace-tabs=4 --out-format=xterm256 --style=pablo --force -- "$file" ;;
    application/zip) atool --list -- "$file" ;;
    */pdf) pdftotext -l 10 -nopgbrk -q -- "$file" - ;;
    *opendocument*) odt2txt "$file" ;;
    image/*)
        orientation="$(identify -format '%[EXIF:Orientation]\n' -- "$file")"
        if [ -n "$orientation" ] && [ "$orientation" != 1 ]; then
          cache="$(hash "$file").jpg"
          cache "$cache" "$@"
          convert -- "$file" -auto-orient "$cache"
          draw "$cache" "$@"
        else
          draw "$file" "$@"
        fi
        ;;
    video/*)
        cache="$(hash "$file").jpg"
        cache "$cache" "$@"
        ffmpegthumbnailer -i "$file" -o "$cache" -s 0
        draw "$cache" "$@"
        ;;
  esac
fi

file -Lb -- "$1" | fold -s -w "$width"
exit 0

